{"version":3,"sources":["App.js","index.js"],"names":["App","useState","money","setMoney","element","useRef","resultElm","calcTax","event","preventDefault","actualMoneyAmount","target","querySelector","value","totalMoneyMount","Math","floor","formatChanged","Intl","NumberFormat","style","currency","format","current","innerText","path","useCalcTax","className","action","method","onSubmit","type","placeholder","ref","marginBottom","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"4OA6CeA,MAnBf,WAAgB,IAAD,EAvBI,WAAO,IAAD,EACKC,mBAAS,GADd,mBACdC,EADc,KACPC,EADO,KAEfC,EAAUC,mBACVC,EAAYD,mBAiBlB,MAAO,CAAED,UAASG,QAfF,SAACC,GACbA,EAAMC,iBADiB,IAGjBC,EADaF,EAAXG,OACyBC,cAAc,oBAAoBC,MAE7DC,EAAkBJ,EAAiB,KAEzCP,EAASY,KAAKC,MAAMF,IAEpB,IAAMG,EAAgB,IAAIC,KAAKC,aAAa,QAAS,CAAEC,MAAO,WAAYC,SAAU,QAASC,OAAOpB,GACpGE,EAAQmB,QAAQC,UAAhB,UAA+BP,EAA/B,WACA,IAAMQ,EAAI,0EAAyBvB,EAAzB,cAAoCa,KAAKC,MAP9B,KAOmDd,GAA9D,cAA0EQ,GACpFJ,EAAUiB,QAAQC,UAAYC,GAGPnB,aAIaoB,GAAhCtB,EADG,EACHA,QAASG,EADN,EACMA,QAASD,EADf,EACeA,UAE1B,OACI,yBAAKqB,UAAU,OACX,yJACA,0BAAMC,OAAO,IAAIC,OAAO,MAAMC,SAAUvB,GACpC,2BAAOwB,KAAK,OAAOC,YAAY,8BAC/B,2BAAOD,KAAK,YAEhB,mDACA,0BAAME,IAAK7B,EAASgB,MAAO,CAAEc,aAAc,SAA3C,YAGA,0BAAMD,IAAK3B,MCnCvB6B,IAASC,OACL,kBAAC,IAAMC,WAAP,KACI,kBAAC,EAAD,OAEJC,SAASC,eAAe,W","file":"static/js/main.171307e3.chunk.js","sourcesContent":["import React, { useState, useRef } from \"react\";\nimport \"./App.css\";\n\nconst useCalcTax = () => {\n    const [money, setMoney] = useState(0);\n    const element = useRef();\n    const resultElm = useRef();\n\n    const calcTax = (event) => {\n        event.preventDefault();\n        const { target } = event;\n        const actualMoneyAmount = target.querySelector(\"input[type=text]\").value;\n        const TAX_CONSTANT = 0.033;\n        const totalMoneyMount = actualMoneyAmount / (1 - TAX_CONSTANT);\n\n        setMoney(Math.floor(totalMoneyMount));\n\n        const formatChanged = new Intl.NumberFormat(\"ko-KR\", { style: \"currency\", currency: \"KRW\" }).format(money);\n        element.current.innerText = `${formatChanged} 원`;\n        const path = `총 금액 - 세금 = 실 수령액\\n${money} - ${Math.floor(TAX_CONSTANT * money)} = ${actualMoneyAmount}`;\n        resultElm.current.innerText = path;\n    };\n\n    return { element, calcTax, resultElm };\n};\n\nfunction App() {\n    const { element, calcTax, resultElm } = useCalcTax();\n\n    return (\n        <div className=\"App\">\n            <h1>실제로 수령할 금액을 입력해 주세요(세금 떼고)</h1>\n            <form action=\"#\" method=\"get\" onSubmit={calcTax}>\n                <input type=\"text\" placeholder=\"실 수령액\"></input>\n                <input type=\"submit\" />\n            </form>\n            <h2>총 금액</h2>\n            <span ref={element} style={{ marginBottom: \"10px\" }}>\n                0 원\n            </span>\n            <span ref={resultElm}></span>\n        </div>\n    );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n"],"sourceRoot":""}